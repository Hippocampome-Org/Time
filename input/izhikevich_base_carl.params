
breedthreads	= 1
evalthreads	= 1
seed.0		= time

state		= ec.simple.SimpleEvolutionState

pop		= ec.Population
init		= ec.simple.SimpleInitializer
finish		= ec.simple.SimpleFinisher
breed		= ec.simple.SimpleBreeder


exch		= ec.simple.SimpleExchanger

jobs = 1
generations		= 5000
pop.subpop.0.size 		= 400

quit-on-run-complete	= true
checkpoint		= false
checkpoint-prefix	= ec
checkpoint-modulo	= 1

pop.subpops		= 1
pop.subpop.0		= ec.Subpopulation

pop.subpop.0.duplicate-retries 	= 0
#
pop.subpop.0.species 		= ec.vector.FloatVectorSpecies
pop.subpop.0.species.ind	= ec.vector.DoubleVectorIndividual

pop.subpop.0.species.crossover-type	= two
#pop.subpop.0.species.crossover-prob = 0.1
base.likelihood = 0.5	

select.tournament.size		= 2

pop.subpop.0.species.pipe			= ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.0		= ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0.source.0	= ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1	= ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.2	= ec.select.TournamentSelection

#eval		= ec.simple.SimpleEvaluator
#eval.problem		= ec.app.izhikevich.ModelEvaluatorWrapper

# Set up external fitness evaluation
# =========================
eval		= ecjapp.eval.SimpleGroupedEvaluator
eval.problem.objective.idealFitnessValue = 0
eval.problem =                          ecjapp.eval.problem.CommandProblem
eval.problem.objective = ec.app.izhikevich.PhenotypeToFitness                
#ecjapp.eval.problem.objective.StringToDoubleObjective
eval.problem.errorGenesFile = 		$output/genesOnError.txt
eval.problem.errorResultsFile = 	$output/resultsOnError.txt
eval.problem.simulationCommand =        $../CARLsim/projects/tuneIzh9p/carlsim_tuneIzh9p_4c2_wrapper
eval.problem.simulationCommandArguments =	-device 0

#breed.elite.0 = 2
breed.elite-fraction.0 = 0.25
